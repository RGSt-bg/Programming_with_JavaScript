e1-Add-and-Subtract.js

function addAndSubtract(arrNumb)
{
	let sumOldArr = 0;
	let sumNewArr = 0;
	let newArr = [];

	for (let i = 0; i < arrNumb.length; i++)
	{
		sumOldArr += arrNumb[i];
		if (arrNumb[i] % 2 === 0) newArr.push(arrNumb[i] + i);
		else newArr.push(arrNumb[i] - i);
		sumNewArr += newArr[i];
	}
	console.log(newArr);
	console.log(sumOldArr);
	console.log(sumNewArr);
}

addAndSubtract([5, 15, 23, 56, 35]);

====================================================================================================================
e2-Common-Elements.js

function commonElements(arr1, arr2)
{
	for (let i = 0; i < arr1.length; i++)
		for (let j = 0; j < arr2.length; j++)
			if (arr1[i] === arr2[j]) console.log(arr1[i]);
}

commonElements(['Hey', 'hello', 2, 4, 'Peter', 'e'], ['Petar', 10, 'hey', 4, 'hello', '2']);

====================================================================================================================
e3-Merge-Arrays.js

function mergeArrays(arr1, arr2)
{
	let newArr = [];	

	for (let i = 0; i < arr1.length; i++)
		if (i === 0 || i % 2 == 0) newArr.push(Number(arr1[i]) + Number(arr2[i]));
		else newArr.push(arr1[i].toString() + arr2[i].toString());
	console.log(newArr.join(" - "));
}

mergeArrays(['5', '15', '23', '56', '35'], ['17', '22', '87', '36', '11']);

====================================================================================================================
e4-Array-Rotation.js

function arrayRotation(arrNumb, rotation)
{
	let tmpNumb = 0;

	for (i = 1; i <= rotation; i++)
	{
		tmpNumb = arrNumb[0];
		for (j = 0; j < arrNumb.length-1; j++) arrNumb[j] = arrNumb[j+1];
		arrNumb[arrNumb.length-1] = tmpNumb;
	}
	console.log(arrNumb.join(" "));

}

arrayRotation([51, 47, 32, 61, 21], 2);

====================================================================================================================
e5-Max-Number.js

function maxNumber(arrNumb)
{
	let newArr = [];
	
	for (let i = 1; i <= arrNumb.length; i++)
	{
		let flag = 1;
		let currentNumb = Number(arrNumb[i-1]);
        for (let j = i; j < arrNumb.length; j++)
        {
			let nextNumb = Number(arrNumb[j]);
			if (nextNumb >= currentNumb)
            {
                flag = 0;
                break;
            }
		}	
		if (flag == 1) newArr.push(currentNumb);
	}
	console.log(newArr.join(" "));
}

maxNumber([1, 4, 3, 2]);

====================================================================================================================
e6-Equal-Sums.js

function equalSums(arrNumb)
{
	let leftSum = 0;
	let rightSum = 0;
	let flag = false;

	for (let i = 0; i < arrNumb.length; i++)
	{
		for (let j = 0; j < arrNumb.length; j++)
		{
			if (j !== i)
			{
				let numb = Number(arrNumb[j]);
				if (j < i) leftSum += numb;
				else if(j > i) rightSum += numb;

			}
		if (i === 0) leftSum = 0;
		else if (i === arrNumb.length-1) rightSum = 0;
		}

		if (leftSum === rightSum)
		{
			console.log(i);
			flag = true;
		}
		else
		{
			leftSum = 0;
			rightSum = 0;
		}
	}
	if (flag == false) console.log("no");
}

equalSums([1, 2, 3, 3]);

====================================================================================================================
e7-Max-Sequence-of-Equal-Elements.js

function maxSequenceOfEqualElements(arrNumb)
{
    let longSeqNumb = 0;
    let counter = 1;
    let maxCounter = 0;

    for (i = 0; i < arrNumb.length; i++)
    {
        if (i !== 0)
        {
            let firstNumb = Number(arrNumb[i - 1]);
            let nextNumb = Number(arrNumb[i]);

            if (firstNumb === nextNumb)
            {
                counter ++;

                if (counter > maxCounter)
                {
                    maxCounter = counter;
                    longSeqNumb = nextNumb;
                }
            }
            else
            {
                counter = 1;
            }
        }
    }
    console.log(`${(longSeqNumb + " ").repeat(maxCounter)}`);
}

maxSequenceOfEqualElements(arrNumb);

====================================================================================================================
e9-Dungeonest-Dark_NOT-READY!!!.js

function dungeonestDark(arrRooms)
{
    let health = 100;
    let coins = 0;
    let spacePos = "";
    let something = "";
    let numb = 0;
    let newArr = [];
    let input = arrRooms + "|";
    let firstChar = 0;
    let currentChar = 0;
    let tmpStr = "";
    let died = false;

    while (currentChar < input.length - 1) //създава нов масив от предмет/чудовище и числата към тях.
    {
        currentChar = input.indexOf("|", firstChar);
        tmpStr = input.slice(firstChar, currentChar);
        firstChar = currentChar + 1;

        spacePos = tmpStr.indexOf(" ", 0);
        something = tmpStr.slice(0, spacePos);
        newArr.push(something);
        spacePos++;
        something = tmpStr.slice(spacePos, tmpStr.length);
        newArr.push(something);
    }

    for (i = 0; i < newArr.length; i += 2)
    {
        if (died) break;
        something = newArr[i];
        numb = Number(newArr[i+1]);

        switch (something)
        {
            case "potion":
            {
                if (health + numb > 100)
		{
			numb = 100 - health;
			health = 100;
		}
                else health += numb;
                console.log(`You healed for ${numb} hp.`);
                console.log(`Current health: ${health} hp.`);
                break;
            }
            case "chest":
            {
                coins += Number(numb);
                console.log(`You found ${numb} coins.`);
                break;
            }
            default:
            {
                health -= Number(numb);
                if (health > 0) 
                    console.log(`You slayed ${something}.`);
                else
                {
                    console.log(`You died! Killed by ${something}.`);
                    numb = (i / 2) + 1;
                    console.log(`Best room: ${numb}`);
                    died = true;
                }
                break;
            }
        }
        if (i+2 == newArr.length)
        {
            console.log("You've made it!");
            console.log(`Coins: ${coins}`);
            console.log(`Health: ${health}`);
        }
    }

}

dungeonestDark(["cat 10|potion 30|orc 10|chest 10|snake 25|chest 110"]);

====================================================================================================================
e10-Ladybugs_NOT-READY!!!.js

function Ladybugs(arrInitCond)
{

}

Ladybugs([ 3, '0 1', '0 right 1', '2 right 1' ]);